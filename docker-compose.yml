version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: roof_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=roof_platform.settings
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/roof_platform
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-django-insecure-dev-key-change-in-production}
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./backend:/app
      - static_files:/app/staticfiles
      - media_files:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NEXT_PUBLIC_ENVIRONMENT=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm run dev

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=roof_platform.settings
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/roof_platform
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-django-insecure-dev-key-change-in-production}
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    command: celery -A roof_platform worker --loglevel=info

  # Celery Beat (Scheduled Tasks)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=roof_platform.settings
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/roof_platform
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-django-insecure-dev-key-change-in-production}
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    command: celery -A roof_platform beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler

volumes:
  postgres_data:
  redis_data:
  static_files:
  media_files:
