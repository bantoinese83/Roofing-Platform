# Generated by Django 4.2.24 on 2025-09-13 02:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("technicians", "0001_initial"),
        ("jobs", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SchedulingSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "default_job_duration_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=2.0,
                        help_text="Default estimated duration for new jobs",
                        max_digits=4,
                    ),
                ),
                (
                    "working_hours_start",
                    models.TimeField(
                        default="08:00:00", help_text="Default working hours start time"
                    ),
                ),
                (
                    "working_hours_end",
                    models.TimeField(
                        default="17:00:00", help_text="Default working hours end time"
                    ),
                ),
                (
                    "buffer_between_jobs_minutes",
                    models.PositiveIntegerField(
                        default=30, help_text="Buffer time between jobs in minutes"
                    ),
                ),
                (
                    "auto_schedule_new_jobs",
                    models.BooleanField(
                        default=False, help_text="Automatically schedule new jobs"
                    ),
                ),
                (
                    "auto_assign_crews",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically assign crews based on availability",
                    ),
                ),
                (
                    "notify_on_overdue_jobs",
                    models.BooleanField(
                        default=True, help_text="Send notifications for overdue jobs"
                    ),
                ),
                (
                    "overdue_notification_hours",
                    models.PositiveIntegerField(
                        default=2,
                        help_text="Hours before scheduled time to send overdue notifications",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Scheduling Settings",
                "verbose_name_plural": "Scheduling Settings",
            },
        ),
        migrations.CreateModel(
            name="JobSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateField(help_text="Date when the job is scheduled"),
                ),
                (
                    "scheduled_time",
                    models.TimeField(
                        blank=True,
                        help_text="Time when the job is scheduled to start",
                        null=True,
                    ),
                ),
                (
                    "estimated_duration_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=2.0,
                        help_text="Estimated duration in hours",
                        max_digits=4,
                    ),
                ),
                (
                    "actual_duration_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Actual duration in hours",
                        max_digits=4,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("confirmed", "Confirmed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                        ],
                        default="scheduled",
                        help_text="Current scheduling status",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        help_text="Job priority level",
                        max_length=20,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Job location latitude",
                        max_digits=9,
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Job location longitude",
                        max_digits=9,
                        null=True,
                    ),
                ),
                (
                    "scheduling_notes",
                    models.TextField(
                        blank=True, help_text="Special scheduling notes or instructions"
                    ),
                ),
                (
                    "customer_notes",
                    models.TextField(
                        blank=True,
                        help_text="Notes from customer about scheduling preferences",
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this job was scheduled"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Last update timestamp"
                    ),
                ),
                (
                    "assigned_crew",
                    models.ForeignKey(
                        blank=True,
                        help_text="Crew assigned to this job",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="scheduled_jobs",
                        to="technicians.crew",
                    ),
                ),
                (
                    "assigned_technician",
                    models.ForeignKey(
                        blank=True,
                        help_text="Primary technician assigned to this job",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="scheduled_jobs",
                        to="technicians.technicianprofile",
                    ),
                ),
                (
                    "job",
                    models.OneToOneField(
                        help_text="Job being scheduled",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule",
                        to="jobs.job",
                    ),
                ),
                (
                    "scheduled_by",
                    models.ForeignKey(
                        help_text="User who scheduled this job",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="scheduled_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Job Schedule",
                "verbose_name_plural": "Job Schedules",
                "ordering": ["scheduled_date", "scheduled_time"],
                "indexes": [
                    models.Index(
                        fields=["scheduled_date", "status"],
                        name="scheduling__schedul_8b9ec2_idx",
                    ),
                    models.Index(
                        fields=["assigned_crew", "scheduled_date"],
                        name="scheduling__assigne_8d1b68_idx",
                    ),
                    models.Index(
                        fields=["assigned_technician", "scheduled_date"],
                        name="scheduling__assigne_2fea90_idx",
                    ),
                    models.Index(
                        fields=["status", "priority"],
                        name="scheduling__status_534071_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CalendarEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(help_text="Event title", max_length=200)),
                (
                    "description",
                    models.TextField(blank=True, help_text="Event description"),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("holiday", "Holiday"),
                            ("training", "Training"),
                            ("meeting", "Meeting"),
                            ("maintenance", "Maintenance"),
                            ("other", "Other"),
                        ],
                        default="other",
                        help_text="Type of calendar event",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField(help_text="Event start date")),
                (
                    "start_time",
                    models.TimeField(
                        blank=True, help_text="Event start time", null=True
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="Event end date (if different from start)",
                        null=True,
                    ),
                ),
                (
                    "end_time",
                    models.TimeField(blank=True, help_text="Event end time", null=True),
                ),
                (
                    "is_all_day",
                    models.BooleanField(
                        default=False, help_text="Whether this is an all-day event"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, help_text="Event location", max_length=200
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Location latitude",
                        max_digits=9,
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Location longitude",
                        max_digits=9,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_crews",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Crews assigned to this event",
                        related_name="calendar_events",
                        to="technicians.crew",
                    ),
                ),
                (
                    "assigned_to",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Technicians assigned to this event",
                        related_name="calendar_events",
                        to="technicians.technicianprofile",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this event",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_calendar_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Calendar Event",
                "verbose_name_plural": "Calendar Events",
                "ordering": ["start_date", "start_time"],
                "indexes": [
                    models.Index(
                        fields=["start_date", "end_date"],
                        name="scheduling__start_d_78471c_idx",
                    ),
                    models.Index(
                        fields=["event_type", "start_date"],
                        name="scheduling__event_t_cd97d8_idx",
                    ),
                ],
            },
        ),
    ]
