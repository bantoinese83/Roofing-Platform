# Generated by Django 4.2.24 on 2025-09-13 00:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(help_text="Customer first name", max_length=50),
                ),
                (
                    "last_name",
                    models.CharField(help_text="Customer last name", max_length=50),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Primary email address", max_length=254, unique=True
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Primary phone number",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "alt_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Alternative phone number",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this customer is active"
                    ),
                ),
                (
                    "marketing_opt_in",
                    models.BooleanField(
                        default=False,
                        help_text="Whether customer has opted in for marketing communications",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="General notes about the customer"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this customer record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_customers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer",
                "verbose_name_plural": "Customers",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CustomerCommunication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "communication_type",
                    models.CharField(
                        choices=[
                            ("phone", "Phone Call"),
                            ("email", "Email"),
                            ("text", "Text Message"),
                            ("in_person", "In Person"),
                            ("note", "Internal Note"),
                        ],
                        help_text="Type of communication",
                        max_length=20,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Subject or brief description",
                        max_length=200,
                    ),
                ),
                (
                    "message",
                    models.TextField(help_text="Communication content or notes"),
                ),
                (
                    "contact_method",
                    models.CharField(
                        blank=True,
                        help_text="How the customer was contacted (phone number, email, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "requires_followup",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this communication requires follow-up",
                    ),
                ),
                (
                    "followup_date",
                    models.DateTimeField(
                        blank=True, help_text="Date when follow-up is needed", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who logged this communication",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="customer_communications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer this communication is about",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communications",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Communication",
                "verbose_name_plural": "Customer Communications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["customer", "created_at"],
                        name="customers_c_custome_e5c5e7_idx",
                    ),
                    models.Index(
                        fields=["communication_type"],
                        name="customers_c_communi_3d0708_idx",
                    ),
                    models.Index(
                        fields=["requires_followup"],
                        name="customers_c_require_d9cb4f_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CustomerAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "address_type",
                    models.CharField(
                        choices=[
                            ("home", "Home"),
                            ("work", "Work"),
                            ("other", "Other"),
                        ],
                        default="home",
                        help_text="Type of address",
                        max_length=20,
                    ),
                ),
                (
                    "street_address",
                    models.CharField(help_text="Street address", max_length=255),
                ),
                (
                    "apartment_unit",
                    models.CharField(
                        blank=True,
                        help_text="Apartment, suite, or unit number",
                        max_length=50,
                    ),
                ),
                ("city", models.CharField(help_text="City", max_length=100)),
                (
                    "state",
                    models.CharField(help_text="State or province", max_length=50),
                ),
                (
                    "postal_code",
                    models.CharField(help_text="ZIP or postal code", max_length=20),
                ),
                (
                    "country",
                    models.CharField(
                        default="United States", help_text="Country", max_length=100
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Latitude coordinate",
                        max_digits=9,
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Longitude coordinate",
                        max_digits=9,
                        null=True,
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the primary address for the customer",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this address is still active"
                    ),
                ),
                (
                    "instructions",
                    models.TextField(
                        blank=True,
                        help_text="Special instructions for accessing this address",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer this address belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Address",
                "verbose_name_plural": "Customer Addresses",
                "ordering": ["-is_primary", "address_type"],
                "unique_together": {("customer", "is_primary")},
            },
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(fields=["email"], name="customers_c_email_4fdeb3_idx"),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["phone_number"], name="customers_c_phone_n_cabfe1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["first_name", "last_name"],
                name="customers_c_first_n_146a71_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["is_active"], name="customers_c_is_acti_91d305_idx"
            ),
        ),
    ]
