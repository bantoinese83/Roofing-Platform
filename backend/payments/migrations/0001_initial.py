# Generated by Django 4.2.24 on 2025-09-13 01:10

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("jobs", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("inventory", "0001_initial"),
        ("customers", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        blank=True,
                        help_text="Unique invoice number",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Invoice title/description", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed description of services"
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Subtotal before tax and discounts",
                        max_digits=10,
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Tax rate as percentage (e.g., 8.25 for 8.25%)",
                        max_digits=5,
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Calculated tax amount",
                        max_digits=8,
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Discount amount",
                        max_digits=8,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, help_text="Final total amount", max_digits=10
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent"),
                            ("paid", "Paid"),
                            ("overdue", "Overdue"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        help_text="Current status of the invoice",
                        max_length=20,
                    ),
                ),
                (
                    "issue_date",
                    models.DateField(help_text="Date the invoice was issued"),
                ),
                ("due_date", models.DateField(help_text="Payment due date")),
                (
                    "paid_date",
                    models.DateField(
                        blank=True, help_text="Date payment was received", null=True
                    ),
                ),
                (
                    "stripe_invoice_id",
                    models.CharField(
                        blank=True, help_text="Stripe Invoice ID", max_length=100
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="Internal notes")),
                (
                    "customer_notes",
                    models.TextField(blank=True, help_text="Notes visible to customer"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this invoice",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_invoices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer being invoiced",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to="customers.customer",
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        blank=True,
                        help_text="Job this invoice is for (optional)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="invoices",
                        to="jobs.job",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice",
                "verbose_name_plural": "Invoices",
                "ordering": ["-issue_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stripe_publishable_key",
                    models.CharField(
                        blank=True,
                        help_text="Stripe Publishable Key (safe to expose to frontend)",
                        max_length=200,
                    ),
                ),
                (
                    "stripe_secret_key",
                    models.CharField(
                        blank=True,
                        help_text="Stripe Secret Key (keep secure)",
                        max_length=200,
                    ),
                ),
                (
                    "stripe_webhook_secret",
                    models.CharField(
                        blank=True,
                        help_text="Stripe Webhook Secret for webhook verification",
                        max_length=200,
                    ),
                ),
                (
                    "default_currency",
                    models.CharField(
                        default="usd",
                        help_text="Default currency for payments",
                        max_length=3,
                    ),
                ),
                (
                    "default_tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Default tax rate as percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "payment_terms_days",
                    models.PositiveIntegerField(
                        default=30, help_text="Default payment terms in days"
                    ),
                ),
                (
                    "enable_payment_processing",
                    models.BooleanField(
                        default=True, help_text="Enable payment processing features"
                    ),
                ),
                (
                    "enable_automatic_invoicing",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically create invoices for completed jobs",
                    ),
                ),
                (
                    "require_payment_method",
                    models.BooleanField(
                        default=False,
                        help_text="Require customers to save payment methods",
                    ),
                ),
                (
                    "send_invoice_emails",
                    models.BooleanField(
                        default=True, help_text="Send invoice emails to customers"
                    ),
                ),
                (
                    "send_payment_receipts",
                    models.BooleanField(
                        default=True, help_text="Send payment receipt emails"
                    ),
                ),
                (
                    "notify_on_payment_success",
                    models.BooleanField(
                        default=True,
                        help_text="Notify office staff of successful payments",
                    ),
                ),
                (
                    "notify_on_payment_failure",
                    models.BooleanField(
                        default=True, help_text="Notify office staff of failed payments"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Payment Settings",
                "verbose_name_plural": "Payment Settings",
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("card", "Credit/Debit Card"),
                            ("bank_account", "Bank Account"),
                        ],
                        help_text="Type of payment method",
                        max_length=20,
                    ),
                ),
                (
                    "stripe_payment_method_id",
                    models.CharField(
                        help_text="Stripe PaymentMethod ID", max_length=100, unique=True
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(help_text="Stripe Customer ID", max_length=100),
                ),
                (
                    "last4",
                    models.CharField(
                        blank=True,
                        help_text="Last 4 digits of card/bank account",
                        max_length=4,
                    ),
                ),
                (
                    "brand",
                    models.CharField(
                        blank=True,
                        help_text="Card brand (visa, mastercard, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "expiry_month",
                    models.PositiveIntegerField(
                        blank=True, help_text="Card expiry month", null=True
                    ),
                ),
                (
                    "expiry_year",
                    models.PositiveIntegerField(
                        blank=True, help_text="Card expiry year", null=True
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True,
                        help_text="Bank name for ACH payments",
                        max_length=100,
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the default payment method",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this payment method is active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who added this payment method",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_payment_methods",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer this payment method belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_methods",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment Method",
                "verbose_name_plural": "Payment Methods",
                "ordering": ["-is_default", "-created_at"],
                "unique_together": {("customer", "stripe_payment_method_id")},
            },
        ),
        migrations.CreateModel(
            name="InvoiceItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the item/service", max_length=200
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        help_text="Quantity of items",
                        max_digits=8,
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, help_text="Price per unit", max_digits=8
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total price for this line item",
                        max_digits=8,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "inventory_item",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related inventory item",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="invoice_items",
                        to="inventory.inventoryitem",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        help_text="Invoice this item belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="payments.invoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice Item",
                "verbose_name_plural": "Invoice Items",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, help_text="Payment amount", max_digits=10
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="usd", help_text="Payment currency", max_length=3
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        help_text="Payment status",
                        max_length=20,
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(
                        blank=True, help_text="Stripe PaymentIntent ID", max_length=100
                    ),
                ),
                (
                    "stripe_charge_id",
                    models.CharField(
                        blank=True, help_text="Stripe Charge ID", max_length=100
                    ),
                ),
                (
                    "processing_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Stripe processing fee",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "net_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Net amount after fees",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "failure_reason",
                    models.TextField(
                        blank=True, help_text="Reason for payment failure"
                    ),
                ),
                (
                    "payment_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date/time payment was processed",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who processed this payment",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer making the payment",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="customers.customer",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        help_text="Invoice being paid",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="payments.invoice",
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        blank=True,
                        help_text="Payment method used",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payments",
                        to="payments.paymentmethod",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment",
                "verbose_name_plural": "Payments",
                "ordering": ["-payment_date", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["invoice", "status"],
                        name="payments_pa_invoice_e2429a_idx",
                    ),
                    models.Index(
                        fields=["customer", "status"],
                        name="payments_pa_custome_25a299_idx",
                    ),
                    models.Index(
                        fields=["status", "payment_date"],
                        name="payments_pa_status_3f89d4_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["customer", "status"], name="payments_in_custome_fd2c3d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["status", "due_date"], name="payments_in_status_68daea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["invoice_number"], name="payments_in_invoice_3fa711_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["job", "status"], name="payments_in_job_id_109039_idx"
            ),
        ),
    ]
